trigger:
  batch: false
  branches:
    include:
      - master
      - release/*
  paths:
    include:
    - '*'
    exclude:
    - 'readme.md'
    - 'changelog.md'
    - 'docs/*'

stages:
- stage: build
  variables:
    buildConfiguration: Release
  jobs:
  - job:
    pool:
      vmImage: 'windows-2019'
    workspace:
      clean: all
    steps:
    - task: UseDotNet@2
      displayName: 'use .NET Core SDK from global.json'
      inputs:
        packageType: 'sdk'
        useGlobalJson: true

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        versioningScheme: 'off'
        arguments: -c $(buildConfiguration)

    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      inputs:
        command: 'test'
        arguments: -c $(buildConfiguration) --no-build --collect:"XPlat Code Coverage" --settings ./tests/runsettings.xml

    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage'
      inputs:
          codeCoverageTool: cobertura
          summaryFileLocation: $(Agent.TempDirectory)/**/coverage.cobertura.xml

    - task: DotNetCoreCLI@2
      displayName: 'dotnet pack'
      inputs:
        command: 'pack'
        packagesToPack: '**/*.csproj'
        versioningScheme: 'off'
        arguments: -c $(buildConfiguration) --no-build

    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: NugetPackage

- stage: publishAzure
  displayName: 'publish artifacts to azure feed'
  dependsOn: build
  jobs:
  - job:
    pool:
      vmImage: 'windows-2019'
    steps:
    - checkout: none
    - download: current
      artifact: NugetPackage

    - task: NuGetCommand@2
      inputs:
        command: 'push'
        packagesToPush: '$(Pipeline.Workspace)/NugetPackage/*.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: 'a16103d8-76eb-42c8-a7a8-796422eab7b5/46678586-2ad5-4d6d-af2c-83c2a22d0319'

- stage: publishNugetOrg
  displayName: 'publish artifacts to nuget.org'
  dependsOn: build
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
  jobs:
    - deployment: 
      pool:
        vmImage: 'windows-2019'
      environment: 'nuget-org'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: NuGetCommand@2
                inputs:
                  command: 'push'
                  packagesToPush: '$(Pipeline.Workspace)/NugetPackage/*.nupkg'
                  nuGetFeedType: 'external'
                  publishFeedCredentials: 'nuget-org'
              - task: NuGetCommand@2
                inputs:
                  command: 'push'
                  packagesToPush: '$(Pipeline.Workspace)/NugetPackage/*.snupkg'
                  nuGetFeedType: 'external'
                  publishFeedCredentials: 'nuget-org'
