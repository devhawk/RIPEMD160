variables:
- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'a16103d8-76eb-42c8-a7a8-796422eab7b5/46678586-2ad5-4d6d-af2c-83c2a22d0319'
  buildConfiguration: Release

pool:
  vmImage: 'windows-2019'

trigger:
  batch: false
  branches:
    include:
      - master
      - release/*
  paths:
    include:
    - '*'
    exclude:
    - 'readme.md'
    - 'changelog.md'
    - 'docs/*'

steps:
- task: UseDotNet@2
  displayName: 'use .NET Core SDK from global.json'
  inputs:
    packageType: 'sdk'
    useGlobalJson: true

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    versioningScheme: 'off'
    arguments: -c $(buildConfiguration)

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: 'test'
    arguments: -c $(buildConfiguration) --collect:"XPlat Code Coverage" --settings ./tests/runsettings.xml

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
      codeCoverageTool: cobertura
      summaryFileLocation: $(Agent.TempDirectory)/**/coverage.cobertura.xml

- publish: '$(Build.ArtifactStagingDirectory)'
  displayName: 'publish build artifact'
  name: nugetPackage    
